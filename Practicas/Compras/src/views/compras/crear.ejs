<!-- src/views/compras/crear.ejs -->
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Registrar Compras</title>
  <link rel="stylesheet" href="../css/Style.css">
  <link rel="stylesheet" href="../css/Style1.css">
  <link rel="stylesheet" href="/css/Crear.css">
  <style>
    /* Estilos básicos para las sugerencias del proveedor - distinto de producto */
    ul.sugerencias-proveedor {
      position: absolute;
      background: white;
      border: 1px solid #ccc;
      width: 100%;
      max-height: 150px;
      overflow-y: auto;
      padding-left: 0;
      margin-top: 2px;
      list-style-type: none;
      z-index: 9999;
      font-size: 0.9em;
      cursor: pointer;
    }
    ul.sugerencias-proveedor li {
      padding: 6px 10px;
    }
    ul.sugerencias-proveedor li:hover {
      background-color: #ddd;
    }
  </style>
</head>
<body>
  <header>
    <div class="header-left">
      <img src="/images/logo.png" alt="Logo Caja Nacional de Salud" height="3000" />
      <div class="header-text">
        <h1>CAJA NACIONAL DE SALUD</h1>
      </div>
    </div>
    <div class="user-info">
      <img src="/images/usuario.svg" alt="Usuario" class="user-icon" />
      <span>Bienvenido, <%= usuario ? usuario.nombre : 'Invitado' %></span>
    </div>
  </header>

  <nav class="header-right">
    <div class="header-title">
      <ul>
        <h2>DISTRITAL TUPIZA</h2>
        <li><a href="/">Inicio</a></li>
        <li class="coltext">Usuarios
          <ul>
            <li><a href="/usuarios">Lista de Usuarios</a></li>
            <li><a href="/usuarios/crear">Registrar Usuario</a></li>
          </ul>
        </li>
        <li class="coltext">Compras
          <ul>
            <li><a href="/compras">Lista de Compras</a></li>
            <li><a href="/compras/crear">Registrar Compra</a></li>
          </ul>
        </li>
        <li class="coltext">Productos
          <ul>
            <li><a href="/productos">Lista de Productos</a></li>
            <li><a href="/productos/crear">Registrar Producto</a></li>
          </ul>
        </li>
        <li class="coltext">Proveedores
          <ul>
            <li><a href="/proveedores">Lista de Proveedores</a></li>
            <li><a href="/proveedores/crear">Registrar Proveedor</a></li>
          </ul>
        </li>
        <li>
          <a href="#" onclick="event.preventDefault(); document.getElementById('logout-form').submit();">Salir</a>
        </li>
      </ul>
    </div>
      <form id="logout-form" action="/auth/logout" method="POST" style="display: none;">
      </form>
  </nav>
  <h1 class="title">Registrar Compras</h1>

  <form action="/compras/crear-multiples" method="POST" id="comprasForm">
    <table id="comprasTable">
      <thead>
        <tr>
          <th>Cite</th>
          <th>Código</th>
          <th>Cantidad</th>
          <th>Producto</th>
          <th>Precio Unitario</th>
          <th>Costo Total</th>
          <th>Proveedor</th>
          <th>Fecha</th>
          <th>Acciones</th>
        </tr>
      </thead>
      <tbody id="comprasContainer">
        <tr class="compra">
          <td><input type="text" name="cite[]" required /></td>
          <td style="position:relative">
            <input type="text" name="codigo[]" required class="codigo-input" autocomplete="off" />
            <ul class="sugerencias"></ul>
          </td>
          <td><input type="number" name="cantidad[]" required /></td>
          <td style="position:relative">
            <input type="text" name="producto[]" required class="producto-input" autocomplete="off" />
            <ul class="sugerencias"></ul>
          </td>
          <td><input type="number" step="0.01" name="precio_unitario[]" required /></td>
          <td><input type="number" step="0.01" name="costo_total[]" required /></td>
          <td style="position:relative">
            <input type="text" name="proveedor[]" required class="proveedor-input" autocomplete="off" />
            <ul class="sugerencias-proveedor"></ul>
          </td>
          <td><input type="date" name="fecha[]" required /></td>
          <td><button type="button" class="removeCompra">Eliminar</button></td>
        </tr>
      </tbody>
    </table>

    <div class="button-container1">
      <button class="button" type="button" id="agregarCompra">Agregar Otra Compra</button>
    </div>
    <div class="button-container">
      <button class="button" type="submit">Registrar Compras</button>
      <form action="/compras" method="get">
        <button type="button" class="btn-Volver" onclick="window.location.href='/compras'">Retornar</button>
      </form>
    </div>
  </form>

  <script>
    // Función para agregar una nueva fila con inputs y listas de sugerencias
    function agregarCompra() {
      const container = document.getElementById('comprasContainer');
      const nuevaCompra = document.createElement('tr');
      nuevaCompra.classList.add('compra');
      nuevaCompra.innerHTML = `
        <td><input type="text" name="cite[]" required /></td>
        <td style="position:relative">
          <input type="text" name="codigo[]" required class="codigo-input" autocomplete="off" />
          <ul class="sugerencias"></ul>
        </td>
        <td><input type="number" name="cantidad[]" required /></td>
        <td style="position:relative">
          <input type="text" name="producto[]" required class="producto-input" autocomplete="off" />
          <ul class="sugerencias"></ul>
        </td>
        <td><input type="number" step="0.01" name="precio_unitario[]" required /></td>
        <td><input type="number" step="0.01" name="costo_total[]" required /></td>
        <td style="position:relative">
          <input type="text" name="proveedor[]" required class="proveedor-input" autocomplete="off" />
          <ul class="sugerencias-proveedor"></ul>
        </td>
        <td><input type="date" name="fecha[]" required /></td>
        <td><button type="button" class="removeCompra">Eliminar</button></td>
      `;
      container.appendChild(nuevaCompra);
      setupAutocompleteForRow(nuevaCompra);
      setupProveedorAutocompleteForRow(nuevaCompra);
    }

    document.getElementById('agregarCompra').addEventListener('click', agregarCompra);

    // Función para eliminar fila
    document.getElementById('comprasContainer').addEventListener('click', function(event) {
      if(event.target.classList.contains('removeCompra')) {
        const fila = event.target.closest('tr');
        if(fila) fila.remove();
      }
    });

    // ----------------- Script para autocomplete producto y codigo -------------------------
    function setupAutocompleteForRow(row) {
      const codigoInput = row.querySelector('.codigo-input');
      const codigoSugerencias = row.querySelector('td:nth-child(2) ul.sugerencias');
      const productoInput = row.querySelector('.producto-input');
      const productoSugerencias = row.querySelector('td:nth-child(4) ul.sugerencias');

      function limpiarSugerencias(container) {
        container.innerHTML = '';
      }

      codigoInput.addEventListener('input', function() {
        const codigo = this.value.trim();
        limpiarSugerencias(codigoSugerencias);
        if(codigo.length > 0) {
          fetch(`/compras/productos?codigo=${encodeURIComponent(codigo)}`)
            .then(res => res.json())
            .then(data => {
              limpiarSugerencias(codigoSugerencias);
              data.forEach(producto => {
                const li = document.createElement('li');
                li.textContent = producto.codigo;
                li.classList.add('sugerencia-item');
                li.addEventListener('click', () => {
                  codigoInput.value = producto.codigo;
                  productoInput.value = producto.detalle;
                  limpiarSugerencias(codigoSugerencias);
                  limpiarSugerencias(productoSugerencias);
                });
                codigoSugerencias.appendChild(li);
              });
            })
            .catch(err => {
              console.error('Error buscando productos por código:', err);
            });
        }
      });

      productoInput.addEventListener('input', function() {
        const nombre = this.value.trim();
        limpiarSugerencias(productoSugerencias);
        if(nombre.length > 0) {
          fetch(`/compras/productos/nombre?nombre=${encodeURIComponent(nombre)}`)
            .then(res => res.json())
            .then(data => {
              limpiarSugerencias(productoSugerencias);
              data.forEach(producto => {
                const li = document.createElement('li');
                li.textContent = producto.detalle;
                li.classList.add('sugerencia-item');
                li.addEventListener('click', () => {
                  productoInput.value = producto.detalle;
                  codigoInput.value = producto.codigo;
                  limpiarSugerencias(productoSugerencias);
                  limpiarSugerencias(codigoSugerencias);
                });
                productoSugerencias.appendChild(li);
              });
            })
            .catch(err => {
              console.error('Error buscando productos por nombre:', err);
            });
        }
      });

      codigoInput.addEventListener('blur', () => {
        setTimeout(() => limpiarSugerencias(codigoSugerencias), 200);
      });
      productoInput.addEventListener('blur', () => {
        setTimeout(() => limpiarSugerencias(productoSugerencias), 200);
      });
    }

    // Configura autocomplete para el campo Proveedor separado
    function setupProveedorAutocompleteForRow(row) {
      const proveedorInput = row.querySelector('.proveedor-input');
      const proveedorSugerencias = row.querySelector('td:nth-child(7) ul.sugerencias-proveedor');

      function limpiarSugerencias(container) {
        container.innerHTML = '';
      }

      proveedorInput.addEventListener('input', function() {
        const nombre = this.value.trim();
        limpiarSugerencias(proveedorSugerencias);
        if(nombre.length > 0) {
          fetch(`/compras/proveedores/nombre?nombre=${encodeURIComponent(nombre)}`)
            .then(res => res.json())
            .then(data => {
              limpiarSugerencias(proveedorSugerencias);
              data.forEach(proveedor => {
                const li = document.createElement('li');
                li.textContent = proveedor.empresa;
                li.classList.add('sugerencia-item-proveedor');
                li.addEventListener('click', () => {
                  proveedorInput.value = proveedor.empresa;
                  limpiarSugerencias(proveedorSugerencias);
                });
                proveedorSugerencias.appendChild(li);
              });
            })
            .catch(err => {
              console.error('Error buscando proveedores por nombre:', err);
            });
        }
      });

      proveedorInput.addEventListener('blur', () => {
        setTimeout(() => limpiarSugerencias(proveedorSugerencias), 200);
      });
    }

    // Al cargar la pagina, configurar autocompletado para filas existentes
    document.querySelectorAll('#comprasContainer tr.compra').forEach(row => {
      setupAutocompleteForRow(row);
      setupProveedorAutocompleteForRow(row);
    });
  </script>

  <footer>
    &copy; 2025 Caja Nacional de Salud - Todos los derechos reservados
  </footer>
</body>
</html>
